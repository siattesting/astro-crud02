---
import Layout from '../../layouts/Layout.astro'
const locals = Astro.locals
// Redirect the user if not authenticated
const session = await locals.pb.authStore.isValid
if(!session) return Astro.redirect("/auth/login")

// Form submission
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const title = data.get("title");
    const text = data.get("text");
    const amount = number(data.get("amount"));
    const type = data.get("type");
    const date_operation = date(data.get("date"));
    const author = await locals.pb.authStore.model.id;
    // Do something with the data
    const newTransaction = {
        title, text, amount, type, date, author
    }
    await locals.pb.collection("transactions").create(newTransaction)


  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }

  return Astro.redirect('/transactions')

}
---

<Layout>
    <div>
        <h2>Create Form</h2>
        <form method="POST">
            <label for="title">
                <span>Title</span>
                <input type="text" placeholder="Title" name="title" required />
            </label>
            <label for="text">
                <span>Description</span>
                <textarea placeholder="Description" name="text" required  rows={5}/>
            </label>
            <label for="amount">
                <span>Amount</span>
                <input type="number"  name="amount" required  />
            </label>
            <label for="type">
                <span>Type</span>
                <select name="type">
                    {["RECETTES", "DEPENSES"].map(type => <option>{type}</option> )}
                </select>
            </label>
            <label for="date">
                <span>Date</span>
                <input type="date" name="date" required />
            </label>
            <button type="submit">Save</button>
        </form>
    </div>
</Layout>

<style>
    form {
        display: grid;
        grid-template-columns: max-content 1fr;
        gap: 1em;
        margin-bottom: 1em;
        width: 60%;
    }
    label {
        grid-column: span 2;
        display: grid;
        grid: inherit;
        gap: inherit;
        grid-template-columns: subgrid;        
    }
</style>